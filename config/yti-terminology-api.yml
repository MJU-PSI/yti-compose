---
spring:
  profiles: local
  http:
    multipart:
      enabled: true
      max-file-size: 30MB
      max-request-size: 30MB
  activemq:
    broker-url: "tcp://${environment.activemq.host}:${environment.activemq.port}"
    user: yti
    password: "test"

tomcat:
  ajp:
    port: 9090

server:
  port: 8001

search:
  host:
    url: ${environment.terminology-elastic.host}
    port: ${environment.terminology-elastic.port}
    scheme: http

api:
  url: http://${environment.termed-api.host}:${environment.termed-api.port}/api
  user: admin
  pw: admin

groupmanagement:
  url: ${environment.groupmanagement.url}
  public:
    url: ${environment.groupmanagement.public-url}

notify:
  hook:
    url: ${environment.terminology.url}/notify

services:
  codeListUrl: ${environment.codelist.public-url}
  dataModelUrl: ${environment.datamodel.public-url}
  groupManagementUrl: ${environment.groupmanagement.public-url}
  commentsUrl: ${environment.comments.public-url}
  messagingEnabled: ${environment.messaging.enabled}
  env: local

impersonate:
  allowed: true

migration:
  enabled: true

application:
  public:
    url: ${environment.terminology.public-url}

fake:
  login:
    allowed: true
    mail: "john.doe@example.com"
    firstName: "John"
    lastName: "Doe"

---
spring:
  profiles: docker
  http:
    multipart:
      enabled: true
      max-file-size: 30MB
      max-request-size: 30MB
  activemq:
    broker-url: "tcp://${environment.activemq.host}:${environment.activemq.port}"
    user: yti
    password: "test"

tomcat:
  ajp:
    port: 9090

server:
  port: 8001

search:
  host:
    url: ${environment.terminology-elastic.host}
    port: ${environment.terminology-elastic.port}
    scheme: http

api:
  url: http://${environment.termed-api.host}:${environment.termed-api.port}/api
  user: admin
  pw: admin

groupmanagement:
  url: ${environment.groupmanagement.url}
  public:
    url: ${environment.groupmanagement.public-url}

notify:
  hook:
    url: ${environment.terminology.url}/notify

services:
  codeListUrl: ${environment.codelist.public-url}
  dataModelUrl: ${environment.datamodel.public-url}
  groupManagementUrl: ${environment.groupmanagement.public-url}
  commentsUrl: ${environment.comments.public-url}
  messagingEnabled: ${environment.messaging.enabled}
  env: docker

impersonate:
  allowed: true

migration:
  enabled: true

application:
  public:
    url: ${environment.terminology.public-url}

fake:
  login:
    allowed: true
    mail: "john.doe@example.com"
    firstName: "John"
    lastName: "Doe"

