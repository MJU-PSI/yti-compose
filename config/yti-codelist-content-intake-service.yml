---
spring:
  profiles: local

service:
  name: yti-codelist-content-intake-service
  database-name: yti_codelist

server:
  port: 9602

tomcat:
  ajp:
    port: 9603

fake:
  login:
    allowed: true
    mail: "john.doe@example.com"
    firstName: "John"
    lastName: "Doe"

impersonate:
  allowed: true

groupmanagement:
  url: "https://rhp-dev.suomi.fi"
  publicUrl: "https://rhp-dev.suomi.fi"

terminology:
  url: "https://sanastot-dev.suomi.fi"
  publicUrl: "https://sanastot-dev.suomi.fi"

datamodel:
  publicUrl: "https://tietomallit-dev.suomi.fi"

application:
  scheme: http
  host: localhost
  port: ${server.port}
  contextPath: "/codelist-intake"
  access-log: true
  initializeContent: true
  initializeTestContent: false
  env: local

frontend:
  defaultStatus: null
  codeSchemeSortMode: "boostStatus"

public_api:
  scheme: http
  host: localhost
  port: 9601
  contextPath: "/codelist-api"

uri_suomi:
  scheme: http
  host: uri.suomi.fi
  contextPath: "/codelist"

session:
  timeout-mins: 10

hikari:
  jdbcUrl: jdbc:postgresql://${environment.postgres.host}:${environment.postgres.port}/${service.database-name}
  username: postgres
  password:
  minimumIdle: 10
  maximumPoolSize: 10

yti_codelist_content_intake_service_elastic_host: ${environment.codelist-elastic.host}
yti_codelist_content_intake_service_elastic_port: ${environment.codelist-elastic.port}
yti_codelist_content_intake_service_elastic_cluster: ${environment.codelist-elastic.cluster}

---
spring:
  profiles: docker

service:
  name: yti-codelist-content-intake-service
  database-name: yti_codelist

server:
  port: 9602

tomcat:
  ajp:
    port: 9603

fake:
  login:
    allowed: true
    mail: "john.doe@example.com"
    firstName: "John"
    lastName: "Doe"

impersonate:
  allowed: true

groupmanagement:
  url: "http://yti-groupmanagement:8002"
  publicUrl: "http://localhost:9302"

terminology:
  url: "https://sanastot-dev.suomi.fi"
  publicUrl: "https://sanastot-dev.suomi.fi"

datamodel:
  publicUrl: "https://tietomallit-dev.suomi.fi"

application:
  scheme: http
  host: localhost
  port: ${server.port}
  contextPath: "/codelist-intake"
  access-log: true
  initializeContent: true
  initializeTestContent: false
  env: local

frontend:
  defaultStatus: null
  codeSchemeSortMode: "boostStatus"

public_api:
  scheme: http
  host: localhost
  port: 9601
  contextPath: "/codelist-api"

uri_suomi:
  scheme: http
  host: uri.suomi.fi
  contextPath: "/codelist"

session:
  timeout-mins: 10

hikari:
  jdbcUrl: jdbc:postgresql://${environment.postgres.host}:${environment.postgres.port}/${service.database-name}
  username: postgres
  password:
  minimumIdle: 10
  maximumPoolSize: 10

yti_codelist_content_intake_service_elastic_host: ${environment.codelist-elastic.host}
yti_codelist_content_intake_service_elastic_port: ${environment.codelist-elastic.port}
yti_codelist_content_intake_service_elastic_cluster: ${environment.codelist-elastic.cluster}
