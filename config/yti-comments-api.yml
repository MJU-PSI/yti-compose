---
spring:
  profiles: local

service:
  name: yti-comments-api
  database-name: yti_comments

server:
  port: 9701

tomcat:
  ajp:
    port: 9702

fake:
  login:
    allowed: true
    mail: "john.doe@example.com"
    firstName: "John"
    lastName: "Doe"

impersonate:
  allowed: true

groupmanagement:
  url: ${environment.groupmanagement.url}
  publicUrl: ${environment.groupmanagement.public-url}

terminology:
  url: ${environment.terminology.url}
  publicUrl: ${environment.terminology.public-url}

datamodel:
  url: ${environment.datamodel.url}
  publicUrl: ${environment.datamodel.public-url}

codelist:
  url: ${environment.codelist.api-url}
  publicUrl: ${environment.codelist.public-url}

application:
  scheme: http
  host: localhost
  port: ${server.port}
  contextPath: "/comments-api"
  access-log: true
  env: local

uri_suomi:
  scheme: http
  host: uri.suomi.fi

session:
  timeout-mins: 10

hikari:
  jdbcUrl: jdbc:postgresql://${environment.postgres.host}:${environment.postgres.port}/${service.database-name}
  username: postgres
  password:
  minimumIdle: 10
  maximumPoolSize: 10

---
spring:
  profiles: docker

service:
  name: yti-comments-api
  database-name: yti_comments

server:
  port: 9701

tomcat:
  ajp:
    port: 9702

fake:
  login:
    allowed: true
    mail: "john.doe@example.com"
    firstName: "John"
    lastName: "Doe"

impersonate:
  allowed: true

groupmanagement:
  url: ${environment.groupmanagement.url}
  publicUrl: ${environment.groupmanagement.public-url}

terminology:
  url: ${environment.terminology.url}
  publicUrl: ${environment.terminology.public-url}

datamodel:
  url: ${environment.datamodel.url}
  publicUrl: ${environment.datamodel.public-url}

codelist:
  url: ${environment.codelist.api-url}
  publicUrl: ${environment.codelist.public-url}

application:
  scheme: http
  host: localhost
  port: ${server.port}
  contextPath: "/comments-api"
  access-log: true
  env: local

uri_suomi:
  scheme: http
  host: uri.suomi.fi

session:
  timeout-mins: 10

hikari:
  jdbcUrl: jdbc:postgresql://${environment.postgres.host}:${environment.postgres.port}/${service.database-name}
  username: postgres
  password:
  minimumIdle: 10
  maximumPoolSize: 10
